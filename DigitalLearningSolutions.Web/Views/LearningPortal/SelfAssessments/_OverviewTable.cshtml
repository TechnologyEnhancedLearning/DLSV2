@using DigitalLearningSolutions.Data.Models.SelfAssessments;
@model IGrouping<string, Competency>;
@{
    string QuestionLabel = string.IsNullOrWhiteSpace(Model.FirstOrDefault().QuestionLabel) ?
    "Question" : Model.FirstOrDefault().QuestionLabel;
}

<table class="nhsuk-table-responsive nhsuk-u-margin-top-4">
    <thead class="nhsuk-table__head">
        <tr>
            <th class="" scope="col">
                @Model.First().Vocabulary
            </th>
            <th class="" scope="col">
                @QuestionLabel
            </th>
            <th class="" scope="col">
                Self-assessment<br />status
            </th>
            @if (((CurrentSelfAssessment)ViewData["selfAssessment"])?.IsSupervisorResultsReviewed ?? true)
            {
                <th class="" scope="col">
                    Confirmation<br />status
                </th>
            }
            <th class="" scope="col">
                <span class="nhsuk-u-visually-hidden">Actions</span>
            </th>
        </tr>
    </thead>

    @foreach (var competency in Model)
    {
        <tbody class="nhsuk-table__body row-outer" id="comp-@competency.RowNo">
            <tr class="nhsuk-table__row first-row">
                <td rowspan="@competency.AssessmentQuestions.Count()" class="nhsuk-table__cell nhsuk-u-text-align-left">
                    <partial name="_CompetencyFlags"
                             model="competency.CompetencyFlags"
                             view-data="@(new ViewDataDictionary(ViewData) {{ "cssClass", $"{(competency.AlwaysShowDescription ? "" : "nhsuk-u-padding-left-4")}" }})" />
                    @if (competency.Description != null && !competency.AlwaysShowDescription)
                    {
                        <details class="nhsuk-details">
                            <summary class="nhsuk-details__summary nhsuk-u-padding-0">
                                <span class="nhsuk-u-margin-bottom-0">
                                    <span class="nhsuk-details__summary-text">@competency.Name</span>
                                </span>
                            </summary>
                            <div class="nhsuk-details__text nhsuk-u-margin-left-6 nhsuk-u-margin-top-2">
                                @(Html.Raw(@competency.Description))
                            </div>
                        </details>
                    }
                    else
                    {
                        <p class="@(competency.Description != null ? "nhsuk-u-font-weight-bold" : "") nhsuk-u-margin-bottom-0">
                            @competency.Name
                        </p>
                        @if (competency.Description != null)
                        {
                            <p class="nhsuk-u-margin-top-2">
                                @(Html.Raw(competency.Description))
                            </p>
                        }
                    }
                </td>
                <partial name="Shared/_AssessmentQuestionOverviewCells" model="competency.AssessmentQuestions.First()" view-data="@(new ViewDataDictionary(ViewData) { { "competencyNumber", competency.RowNo },{ "QuestionLabel", QuestionLabel } })" />
                <td rowspan="@competency.AssessmentQuestions.Count()" class="nhsuk-table__cell nhsuk-u-font-size-16">
                    <span class="nhsuk-table-responsive__heading">Action </span>
                    <a aria-label="Review @competency.Name" asp-action="SelfAssessmentCompetency" asp-route-selfAssessmentId="@ViewContext.RouteData.Values["selfAssessmentId"]" asp-route-competencyNumber="@competency.RowNo">
                        Review <span class="nhsuk-u-visually-hidden">@competency.Name</span>
                    </a>
                </td>
            </tr>
            @foreach (var question in competency.AssessmentQuestions.Skip(1))
            {
                <tr class="nhsuk-table__row">
                    <partial name="Shared/_AssessmentQuestionOverviewCells" model="question" view-data="@(new ViewDataDictionary(ViewData) { { "competencyNumber", competency.RowNo },{ "QuestionLabel", QuestionLabel } })" />

                </tr>

            }
        </tbody>
    }
</table>
