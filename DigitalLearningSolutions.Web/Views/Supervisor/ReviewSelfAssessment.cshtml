@using DigitalLearningSolutions.Web.ViewModels.Supervisor;
@model ReviewSelfAssessmentViewModel;
@{
    ViewData["Title"] = "Review Profile Assessment";
    ViewData["Application"] = "Supervisor";
    ViewData["HeaderPathName"] = "Supervisor";

    var competencySummaries = from g in Model.CompetencyGroups
                              let questions = g.SelectMany(c => c.AssessmentQuestions).Where(q => q.Required)
                              let selfAssessedCount = questions.Count(q => q.Result.HasValue)
                              let verifiedCount = questions.Count(q => !((q.Result == null || q.Verified == null || q.SignedOff != true) && q.Required))
                              select new ViewDataDictionary(ViewData)
                              {

                                { "questionsCount", questions.Count() },
                                { "selfAssessedCount", selfAssessedCount },
                                { "verifiedCount", verifiedCount }
                              };
}
<link rel="stylesheet" href="@Url.Content("~/css/frameworks/frameworksShared.css")" asp-append-version="true">
<link rel="stylesheet" href="@Url.Content("~/css/shared/searchableElements/searchableElements.css")" asp-append-version="true">
@section NavMenuItems {
    <partial name="Shared/_NavMenuItems" />
}
@section NavBreadcrumbs {
    <nav class="nhsuk-breadcrumb" aria-label="Breadcrumb">
        <div class="nhsuk-width-container">
            <ol class="nhsuk-breadcrumb__list">
                <li class="nhsuk-breadcrumb__item"><a class="nhsuk-breadcrumb__link trigger-loader" asp-controller="Supervisor" asp-action="Index">Supervisor</a></li>
                <li class="nhsuk-breadcrumb__item"><a class="nhsuk-breadcrumb__link trigger-loader" asp-controller="Supervisor" asp-action="MyStaffList">My Staff</a></li>
                <li class="nhsuk-breadcrumb__item">
                    <a class="nhsuk-breadcrumb__link trigger-loader" asp-controller="Supervisor"
                   asp-action="DelegateProfileAssessments"
                   asp-route-supervisorDelegateId="@ViewContext.RouteData.Values["supervisorDelegateId"]">
                        @Model.SupervisorDelegateDetail.FirstName @Model.SupervisorDelegateDetail.LastName
                    </a>
                </li>
                <li class="nhsuk-breadcrumb__item">
                    @(Model.DelegateSelfAssessment.RoleName.Length > 35 ? Model.DelegateSelfAssessment.RoleName.Substring(0, 32) + "..." : Model.DelegateSelfAssessment.RoleName)
                </li>
            </ol>
        </div>
        <p class="nhsuk-breadcrumb__back">
            @if (ViewBag.navigatedFrom)
            {
                <a class="nhsuk-breadcrumb__backlink" asp-controller="Supervisor"
           asp-action="Index">
                    Back to Supervisor Dashboard
                </a>
            }
            else
            {
                <a class="nhsuk-breadcrumb__backlink" asp-controller="Supervisor"
           asp-action="DelegateProfileAssessments"
           asp-route-supervisorDelegateId="@ViewContext.RouteData.Values["supervisorDelegateId"]">
                    Back to @Model.SupervisorDelegateDetail.FirstName @Model.SupervisorDelegateDetail.LastName
                </a>
            }
        </p>
    </nav>
}
<details class="nhsuk-details nhsuk-expander">
    <summary class="nhsuk-details__summary">
        <h1 class="nhsuk-details__summary-text nhsuk-u-margin-bottom-0">
            @Model.SupervisorDelegateDetail.FirstName @Model.SupervisorDelegateDetail.LastName
        </h1>
    </summary>
    <div class="nhsuk-details__text">
        <partial name="Shared/_StaffDetails" model="Model.SupervisorDelegateDetail" />
    </div>
</details>
<div class="nhsuk-grid-row">
    <div class="nhsuk-grid-column-two-thirds">
        <h2>@Model.DelegateSelfAssessment.RoleName</h2>
        @if (Model.DelegateSelfAssessment.NonReportable)
        {
            <partial name="_NonReportableSelfAssessment" />
        }
        <div class="nhsuk-panell competency-group-panel nhsuk-u-padding-">
            <partial name="_ReviewSelfAssessmentOverallProgress"
                     model="@competencySummaries"
                     view-data="@(new ViewDataDictionary(ViewData))" />
        </div>
    </div>
    <div class="nhsuk-grid-column-one-third heading-button-group">
        @if (!Model.ExportToExcelHide)
        {
            <a class="nhsuk-button nhsuk-button--secondary"
           asp-route-candidateAssessmentId="@Model.CandidateAssessmentId"
           asp-route-selfAssessmentName="@Model.DelegateSelfAssessment.RoleName"
           asp-route-delegateUserID="@Model.DelegateSelfAssessment.DelegateUserID"
           asp-route-delegateName="@Model.SupervisorDelegateDetail.FirstName @Model.SupervisorDelegateDetail.LastName"
           asp-action="ExportCandidateAssessment"
           role="button">
                Export to Excel
            </a>
        }

        @if (ViewBag.CanViewCertificate)
        {
            <a class="nhsuk-button"
           asp-route-candidateAssessmentId="@Model.CandidateAssessmentId"
           asp-action="CompetencySelfAssessmentCertificatesupervisor"
           asp-route-supervisorDelegateId="@Model.SupervisorDelegateDetail.ID"
           role="button">
                Certificate
            </a>
        }
        @if (
        Model.DelegateSelfAssessment.SignOffRequested > 0 &&
        competencySummaries.Sum(c => (int)c["verifiedCount"]) == competencySummaries.Sum(c => (int)c["questionsCount"])
        )
        {
            <a role="button" asp-action="SignOffProfileAssessment" asp-route-candidateAssessmentId="@Model.DelegateSelfAssessment.ID" asp-route-supervisorDelegateId="@Model.SupervisorDelegateDetail.ID" class="nhsuk-button">Sign-off self assessment</a>
        }
        @if ((Model.DelegateSelfAssessment.ResultsVerificationRequests > 1) && (competencySummaries.Sum(c => (int)c["verifiedCount"]) < competencySummaries.Sum(c => (int)c["questionsCount"])))
        {
            <a role="button" asp-action="VerifyMultipleResults" asp-route-candidateAssessmentId="@Model.DelegateSelfAssessment.ID" asp-route-supervisorDelegateId="@Model.SupervisorDelegateDetail.ID" class="nhsuk-button">Confirm multiple results</a>
        }
    </div>
</div>
<partial name="../../Supervisor/Shared/_SearchSupervisorCompetency"
         model="@Model.SearchViewModel"
         view-data="@(new ViewDataDictionary(ViewData) { { "parent", Model } })" />
@if (Model.CompetencyGroups.Any())
{
    foreach (var competencyGroup in Model.CompetencyGroups)
    {
        var groupDetails = competencyGroup.First();
        <table role="table" class="nhsuk-table-responsive nhsuk-u-margin-top-4">
            <caption class="nhsuk-table__caption">
                <h3>@competencyGroup.Key</h3>
                @if (!String.IsNullOrEmpty(groupDetails.CompetencyGroupDescription))
                {
                    <p class="nhsuk-body-l">@Html.Raw(groupDetails.CompetencyGroupDescription)</p>
                }
            </caption>
            <thead role="rowgroup" class="nhsuk-table__head">
                <tr role="row">
                    <th role="columnheader" class="" scope="col">
                        @groupDetails.Vocabulary
                    </th>
                    <th role="columnheader" class="" scope="col">
                        @(string.IsNullOrWhiteSpace(Model.DelegateSelfAssessment.QuestionLabel) ? "Question" :
                            Model.DelegateSelfAssessment.QuestionLabel)
                    </th>
                    <th role="columnheader" class="" scope="col">
                        Self-assessment
                    </th>
                    @if (Model.IsSupervisorResultsReviewed)
                    {
                        <th role="columnheader" class="" scope="col">
                            Confirmation status
                        </th>
                    }
                    <th role="columnheader" class="" scope="col">
                        Actions
                    </th>
                </tr>
            </thead>
            <tbody class="nhsuk-table__body">
                @foreach (var competency in competencyGroup)
                {
                    <tr role="row" class="nhsuk-table__row first-row">
                        <td role="cell" rowspan="@competency.AssessmentQuestions.Count()" class="nhsuk-table__cell">
                            @if(competency.Optional)
                            {
                                <partial name="Shared/_TagRow"/>
                            }
                            <b> <span class="nhsuk-table-responsive__heading">@competency.Vocabulary </span></b>
                            <partial name="_CompetencyFlags" model="competency.CompetencyFlags" />
                            @if (competency.Description != null && !competency.AlwaysShowDescription)
                            {
                                <details class="nhsuk-details">
                                    <summary class="nhsuk-details__summary">
                                        <h2 class="nhsuk-u-font-size-24 nhsuk-u-margin-bottom-0">
                                            <span class="nhsuk-details__summary-text">
                                                @competency.Name
                                            </span>
                                        </h2>
                                    </summary>
                                    <div class="nhsuk-details__text">
                                        @(Html.Raw(@competency.Description))
                                    </div>
                                </details>
                            }
                            else
                            {
                                <h2 class="nhsuk-u-margin-bottom-0 nhsuk-u-font-size-24">
                                    @competency.Name
                                </h2>
                                @if (competency.Description != null)
                                {
                                    <p class="nhsuk-body-l">
                                        @(Html.Raw(competency.Description))
                                    </p>
                                }
                            }
                        </td>
                        <partial name="Shared/_AssessmentQuestionReviewCells"
                     model="competency.AssessmentQuestions.First()"
                     view-data="@(new ViewDataDictionary(ViewData) {{ "isSupervisorResultsReviewed", Model.IsSupervisorResultsReviewed }, { "ReviewerCommentsLabel", Model.DelegateSelfAssessment.ReviewerCommentsLabel} } )" />
                    </tr>
                    @foreach (var question in competency.AssessmentQuestions.Skip(1))
                    {
                        <tr role="row" class="nhsuk-table__row">
                            <partial name="Shared/_AssessmentQuestionReviewCells"
                     model="question"
                     view-data="@(new ViewDataDictionary(ViewData) {{ "isSupervisorResultsReviewed", Model.IsSupervisorResultsReviewed }, { "ReviewerCommentsLabel", Model.DelegateSelfAssessment.ReviewerCommentsLabel} } )" />
                        </tr>
                    }
                }
            </tbody>
        </table>

    }
}
@if (Model.SupervisorSignOffs.Any())
{
    <div class="nhsuk-u-margin-top-4">
        <h3>Self Assessment Sign-off Status</h3>
        <partial name="Shared/_SupervisorSignOffSummary" model="@Model.SupervisorSignOffs" view-data="@(new ViewDataDictionary(ViewData) { { "IsAllCompetencyConfirmed", true }})" />
    </div>
}
@if (Model.CompetencyGroups.Any())
{
    <div class="nhsuk-u-margin-top-4">
        <vc:top-link top-element-id="maincontent" link-text="Top of page" />
    </div>
}
