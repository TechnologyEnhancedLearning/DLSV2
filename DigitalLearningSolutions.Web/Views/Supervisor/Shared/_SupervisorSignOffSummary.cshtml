@using DigitalLearningSolutions.Data.Models.SelfAssessments
@using DigitalLearningSolutions.Data.Utilities
@inject IClockUtility ClockUtility
@model IEnumerable<SupervisorSignOff>

@if (Model.Any())
{
  <dl class="nhsuk-summary-list">
      <div class="nhsuk-summary-list__row">
          <dt class="nhsuk-summary-list__key">
        @Model.FirstOrDefault().SupervisorRoleName
          </dt>
          <dd class="nhsuk-summary-list__value">
        @Model.FirstOrDefault().SupervisorName (@Model.FirstOrDefault().SupervisorEmail)
          </dd>
      @if ((Model.Count() - 1) > 0)
      {
            <dd class="nhsuk-summary-list__actions">

            </dd>
      }
      </div>

      <div class="nhsuk-summary-list__row">
          <dt class="nhsuk-summary-list__key">
              Status
          </dt>
          <dd class="nhsuk-summary-list__value">
        @if (Model.FirstOrDefault().Verified == null)
        {
                <span class="nhsuk-tag">Requested @Model.FirstOrDefault().Requested.Value.ToShortDateString()</span>
        }
        else if (Model.FirstOrDefault().SignedOff && Model.FirstOrDefault().Verified != null)
        {
                <span class="nhsuk-tag nhsuk-tag--green">Signed off @Model.FirstOrDefault().Verified.Value.ToShortDateString()</span>
        }
        else
        {
                <span class="nhsuk-tag nhsuk-tag--red">Rejected @Model.FirstOrDefault().Verified.Value.ToShortDateString()</span>
        }
          </dd>
      @if ((Model.Count() - 1) > 0)
      {
            <dd class="nhsuk-summary-list__actions">
          @if (((Model.FirstOrDefault().EmailSent == null && Model.FirstOrDefault().Verified == null || (Model.FirstOrDefault().Verified == null) && Model.FirstOrDefault().EmailSent.Value.ToShortDateString() != ClockUtility.UtcNow.ToShortDateString()) && Model.FirstOrDefault().Removed == null))
          {
            if (ViewContext.RouteData.Values.ContainsKey("vocabulary"))
            {
                    <a asp-action="SendRequestSignOffReminder" asp-route-candidateAssessmentSupervisorVerificationId="@Model.FirstOrDefault().ID" asp-route-vocabulary="@ViewContext.RouteData.Values["vocabulary"]" asp-route-candidateAssessmentSupervisorId="@Model.FirstOrDefault().CandidateAssessmentSupervisorID" asp-route-selfAssessmentId="@ViewContext.RouteData.Values["selfAssessmentId"]">Send reminder</a>

            }
          }
            </dd>
      }

      </div>
      <div class="nhsuk-summary-list__row">
          <dt class="nhsuk-summary-list__key">
              Comments
          </dt>
          <dd class="nhsuk-summary-list__value">
        @Model.FirstOrDefault().Comments
          </dd>
      @if ((Model.Count() - 1) > 0)
      {
            <dd class="nhsuk-summary-list__actions">

            </dd>
      }
      </div>
    @if ((Model.Count() - 1) > 0)
    {
        <div class="nhsuk-summary-list__row">
            <dt class="nhsuk-summary-list__key">
                Previous sign off requests
            </dt>
            <dd class="nhsuk-summary-list__value">
          @(Model.Count() - 1)
            </dd>
            <dd class="nhsuk-summary-list__actions">
          @if (ViewContext.RouteData.Values.ContainsKey("vocabulary"))
          {
                  <a asp-action="SignOffHistory" asp-route-vocabulary="@ViewContext.RouteData.Values["vocabulary"]" asp-route-selfAssessmentId="@ViewContext.RouteData.Values["selfAssessmentId"]">View</a>
          }
          else if (ViewContext.RouteData.Values.ContainsKey("supervisorDelegateId"))
          {
                  <a asp-action="SignOffHistory" asp-route-supervisorDelegateId="@ViewContext.RouteData.Values["supervisorDelegateId"]" asp-route-candidateAssessmentId="@ViewContext.RouteData.Values["candidateAssessmentId"]">View</a>
          }
            </dd>
        </div>
    }
  </dl>
}
