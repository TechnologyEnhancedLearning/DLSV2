@using DigitalLearningSolutions.Data.Models.Supervisor;
@using DigitalLearningSolutions.Data.Utilities
@using DigitalLearningSolutions.Web.ViewModels.Supervisor
@model DelegateSelfAssessmentsViewModel;
@inject IClockUtility ClockUtility

<table role="table" class="nhsuk-table-responsive">
    <caption class="nhsuk-table__caption"><h2>Self assessments</h2></caption>
    <thead role="rowgroup" class="nhsuk-table__head">
        <tr role="row">
            <th role="columnheader" class="" scope="col">
                Self Assessment
            </th>
            <th role="columnheader" class="" scope="col">
                Role
            </th>
            <th role="columnheader" class="" scope="col">
                Last activity
            </th>
            <th role="columnheader" class="" scope="col">
                Status
            </th>
            @if (!Model.IsNominatedSupervisor || (Model.IsNominatedSupervisor && Model.DelegateSelfAssessments.Where(x => x.IsAssignedToSupervisor).Any()))
            {
                <th role="columnheader" class="" scope="col">
                    Actions
                </th>
            }
        </tr>
    </thead>
    <tbody class="nhsuk-table__body">
        @foreach (var delegateSelfAssessment in Model.DelegateSelfAssessments)
        {
            <tr role="row" class="nhsuk-table__row">
                <td role="cell" class="nhsuk-table__cell nhsuk-u-font-size-16">
                    <span class="nhsuk-table-responsive__heading">Self Assessment </span>@delegateSelfAssessment.RoleName
                </td>
                <td role="cell" class="nhsuk-table__cell nhsuk-u-font-size-16">
                    <span class="nhsuk-table-responsive__heading">Role</span>@(delegateSelfAssessment.SupervisorRoleTitle)
                </td>
                <td role="cell" class="nhsuk-table__cell nhsuk-u-font-size-16">
                    <span class="nhsuk-table-responsive__heading">Last activity </span>@delegateSelfAssessment.LastAccessed.ToShortDateString()<br /> (@delegateSelfAssessment.LaunchCount launches)
                </td>
                <td role="cell" class="nhsuk-table__cell nhsuk-u-font-size-16">
                    <span class="nhsuk-table-responsive__heading">Status </span> <partial name="Shared/_ProfileAssessmentStatusTag" model="delegateSelfAssessment" />
                </td>
                @if (Model.IsNominatedSupervisor && Model.DelegateSelfAssessments.Where(x => x.IsAssignedToSupervisor).Any())
                {
                    <td role="cell" class="nhsuk-table__cell nhsuk-u-font-size-16">
                        <span class="nhsuk-table-responsive__heading">Actions </span>
                        @if (delegateSelfAssessment.IsAssignedToSupervisor)
                        {
                            @if (delegateSelfAssessment.LaunchCount > 0)
                            {
                                <a asp-action="ReviewDelegateSelfAssessment" asp-route-supervisorDelegateId="@ViewContext.RouteData.Values["supervisorDelegateId"]" asp-route-candidateAssessmentId="@delegateSelfAssessment.ID">@(delegateSelfAssessment.ResultsVerificationRequests > 0 ? "Review" : "View")</a>
                            }
                        }
                    </td>
                }
                else
                {
                    <td role="cell" class="nhsuk-table__cell nhsuk-u-font-size-16">
                        <span class="nhsuk-table-responsive__heading">Actions </span>
                        @if (delegateSelfAssessment.IsAssignedToSupervisor)
                        {
                            @if (delegateSelfAssessment.SignOffRequested == 0 && delegateSelfAssessment.LastAccessed < ClockUtility.UtcNow.AddDays(-7))
                            {
                                <a class="status-tag" asp-action="SendReminderDelegateSelfAssessment" asp-route-supervisorDelegateId="@ViewContext.RouteData.Values["supervisorDelegateId"]" asp-route-candidateAssessmentId="@delegateSelfAssessment.ID">Send reminder</a>
                            }
                            @if (delegateSelfAssessment.LaunchCount > 0)
                            {
                                <a asp-action="ReviewDelegateSelfAssessment" asp-route-supervisorDelegateId="@ViewContext.RouteData.Values["supervisorDelegateId"]" asp-route-candidateAssessmentId="@delegateSelfAssessment.ID">@(delegateSelfAssessment.SignOffRequested > 0 | delegateSelfAssessment.ResultsVerificationRequests > 0 ? "Review" : "View")</a>
                            }
                            @if (delegateSelfAssessment.CompletedDate != null | delegateSelfAssessment.LaunchCount == 0)
                            {
                                <a asp-action="RemoveDelegateSelfAssessment" asp-route-supervisorDelegateId="@ViewContext.RouteData.Values["supervisorDelegateId"]" asp-route-candidateAssessmentId="@delegateSelfAssessment.ID">Remove</a>
                            }
                            @if (delegateSelfAssessment.CompletedDate == null && delegateSelfAssessment.LaunchCount != 0 && delegateSelfAssessment.SupervisorRoleTitle == "Educator/Manager")
                            {
                                <a asp-action="RemoveDelegateSelfAssessmentsupervisor" asp-route-supervisorDelegateId="@ViewContext.RouteData.Values["supervisorDelegateId"]" asp-route-candidateAssessmentId="@delegateSelfAssessment.ID">Stop supervising</a>

                            }
                        }
                        else
                        {
                            <a asp-action="QuickAddSupervisor" asp-route-supervisorDelegateId="@ViewContext.RouteData.Values["supervisorDelegateId"]" asp-route-delegateUserId="@delegateSelfAssessment.DelegateUserID" asp-route-selfAssessmentId="@delegateSelfAssessment.SelfAssessmentID">Supervise</a>
                        }
                    </td>
                }
            </tr>
        }
    </tbody>
</table>
