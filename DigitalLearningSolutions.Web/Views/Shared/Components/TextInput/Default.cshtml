@using NHSUKViewComponents.Web.ViewModels
@using NHSUKViewComponents.Web.Helpers
@model TextInputViewModel
<div class="nhsuk-form-group @(Model.HasError ? "nhsuk-form-group--error" : "")">
    <label class="nhsuk-label" for="@Model.Name">
        @Model.Label
    </label>
    @if (Model.HintText != null)
    {
        <div class="nhsuk-hint" id="@Model.Name-hint">
            @Html.Raw(Model.HintText)
        </div>
    }
    @if (Model.HasError)
    {
        <div id="@Model.Name-error" class="nhsuk-u-padding-top-1 nhsuk-u-padding-bottom-3">
            @foreach (var errorMessage in Model.ErrorMessages)
            {
                <span class="error-message--margin-bottom-1 nhsuk-error-message">
                    <span class="nhsuk-u-visually-hidden">Error:</span> @errorMessage
                </span>
            }
        </div>
    }
    @if (Model.Required && !Model.HasError)
    {
        <div data-valmsg-for="@Model.Name" data-valmsg-replace="true" class="error-message--margin-bottom-1 nhsuk-error-message field-validation-valid nhsuk-u-padding-top-1 nhsuk-u-padding-bottom-3">
        </div>
    }

    <input class="nhsuk-input @Model.Class @(Model.HasError ? "nhsuk-input--error" : "")"
           id="@Model.Id"
           name="@Model.Name"
           value="@Model.Value"
           type="@Model.Type"
           spellcheck="@Model.SpellCheck"
           autocomplete="@Model.Autocomplete"
           aria-invalid="@(Model.HasError ? "true" : null )"
           aria-describedby="@ViewComponentDynamicAttributeHelper.GetAriaDescribedByAttribute(Model.Name, Model.HasError, Model.HintText)"
           aria-required="@(Model.Required ? "true" : "false" )"
           data-val-required="@(Model.Required ? Model.RequiredClientSideErrorMessage : "" )"
           data-val="@(Model.Required ? "true" : "false" )" />
</div>
